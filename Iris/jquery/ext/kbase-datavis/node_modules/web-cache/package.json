{
  "name": "web-cache",
  "description": "A seamless web cache",
  "author": {
    "name": "Shiran Pasternak",
    "email": "shiranpasternak@gmail.com"
  },
  "version": "0.0.3",
  "keywords": [
    "server",
    "cache",
    "redis"
  ],
  "dependencies": {
    "redis": ">=0.8.2"
  },
  "main": "lib/web-cache.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/gingi/web-cache"
  },
  "bugs": {
    "url": "http://bitbucket.org/gingi/web-cache/issues"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "express": ">=3.0",
    "mocha": ">=1.8.1",
    "should": ">=1.2.1",
    "supertest": ">=0.5.1",
    "async": ">=0.1.22"
  },
  "readme": "#Web Cache\nA seamless web cache using [Redis](http://redis.io/) as a backend. The cache\nallows the server to avoid making repeated expensive or long-waiting route\nhandling. This is useful for serving static content or a relatively static\ndata API.\n\nThis module acts as middleware for web servers built on\n[Connect](https://npmjs.org/package/connect), such as\n[Express](https://npmjs.org/package/express). Other than configuring it in\nthe web server, it does not require any other custom code. It also has some\nsensible defaults so you can hit the ground running.\n\nThe cache expires items not accessed after a configurable age.\n\nNote that a Redis server needs to be running for the cache to operate.\n\n##Example\n\n    var express = require('express'),\n        cache   = require('web-cache');\n    \n    var app = express();\n    \n    app.configure(function () {\n        app.use(cache.middleware({\n            path:    '/api',\n            exclude: [ /ignore\\/.*\\/path/ ],\n            expire:  86400 // One day\n        }));\n    });\n    \n    // This path will be cached\n    app.get('/api/resource/:id', function (req, res, next) {\n        // Fancy-pants calculation\n        res.end(/* Large JSON object */);\n    });\n    \n    app.get('/docs/:id');                 // Will NOT be cached\n    app.get('/api/list/ignore/:id/path'); // Will NOT be cached\n    \n    app.listen(3000);\n    \n## Installation\nThe module can be downloaded from [the NPM Registry](https://npmjs.org/ \"npm\") using:\n\n    npm install web-cache\n    \n## API\nThe only API call **Web Cache** supports (at the moment) is `middleware`.\n\n###client.middleware(params)\nProvides Redis-based caching for the web server. `params` is an associative list with the following supported properties:\n\n* `prefix`: *string* \\[default: `web-cache`]\n\n  The prefix to use for caching. Useful for running multiple caches on the same server.\n  \n* `expire`: *integer* \\[default: `86400`]\n\n  The age of items (in seconds) at which to expire them from the cache.\n  \n* `path`: *string* or *RegExp* \\[default: `/`]\n\n  The path matching routes that should be cached.\n\n* `exclude`: *array* of *string* or *RegExp* \\[default: `null`]\n\n  A list of routes which the cache should exclude.\n\n* `host`: *string* \\[default: `127.0.0.1`]\n\n  The Redis host.\n\n* `port`: *string* \\[default: `6379`]\n\n  The Redis port.\n\n* `clean`: *boolean* \\[default: `false`]\n\n  Remove all currently-cached items.\n\n##Limitations\nThe following are temporary and are being implemented, or thought about.\n\n* Will not cache multiple chunks from streaming responses.\n* No limit on size or count of cached items.\n* Not using Cache-Control headers at the moment.\n\n##Changelog\n####v0.0.3\n* Only caches responses with non-error statuses (200).\n\n##License\n    Copyright (c) 2013 Shiran Pasternak <shiranpasternak@gmail.com>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to\n    deal in the Software without restriction, including without limitation the\n    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    sell copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "web-cache@0.0.3",
  "dist": {
    "shasum": "8e909fa929df0deb9a71a9b3cde7c119e759d4e5"
  },
  "_from": "web-cache@>=0.0.2",
  "_resolved": "https://registry.npmjs.org/web-cache/-/web-cache-0.0.3.tgz"
}
